@model K22CNT4_HVK_TTCD1.Models.Cay

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2>Edit Cay</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Cay</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="mb-3 row">
                @Html.LabelFor(model => model.Tencay, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tencay, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tencay, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3 row">
                @Html.LabelFor(model => model.Iddanhmuc, "Iddanhmuc", htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.DropDownList("Iddanhmuc", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Iddanhmuc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3 row">
                @Html.LabelFor(model => model.Soluong, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Soluong, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Soluong, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3 row">
                @Html.LabelFor(model => model.Dongia, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Dongia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Dongia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3 row">
                @Html.LabelFor(model => model.Hinhanh, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    <div class="input-group">
                        @Html.TextBoxFor(x => x.Hinhanh, new { @id = "txtImgame", @class = "form-control" })
                        <button type="button" class="btn btn-secondary" onclick="BrowseServer('txtImgame')">Tải ảnh</button>
                    </div>
                    @Html.ValidationMessageFor(x => x.Hinhanh, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3 row">
                @Html.Label("Trạng thái", htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.Trangthai, new SelectList(new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Active", Value = "true" },
                        new SelectListItem { Text = "Inactive", Value = "false" }
                    }, "Value", "Text"), "Chọn trạng thái", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Trangthai, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3 row">
                <div class="col-md-10 offset-md-2">
                    <input type="submit" value="Save" class="btn btn-success" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary ms-2" })
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function BrowseServer(field) {
            var finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                document.getElementById(field).value = fileUrl;
            };
            finder.popup();
        }
    </script>
}
