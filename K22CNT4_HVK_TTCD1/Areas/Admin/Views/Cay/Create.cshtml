@model K22CNT4_HVK_TTCD1.Models.Cay

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Cay</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Tencay, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tencay, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tencay, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Iddanhmuc, "Iddanhmuc", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Iddanhmuc", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Iddanhmuc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Soluong, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Soluong, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Soluong, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Dongia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Dongia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Dongia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Hinhanh, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="input-group">
            <div class="custom-file">
                @Html.TextBoxFor(x => x.Hinhanh, new { @id = "txtImgame", @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Hinhanh, null, new { @class = "text-danger" })
            </div>
            <div class="intput-group-append">
                <input type="button" class="btn btn-secondary" value="Tải ảnh" onclick="BrowseServer('txtImgame')" />
            </div>
        </div>
     </div>

        @*Form tạo trạng thái theo menu đổ xuông*@
        <div class="form-group">
            <label for="status">Trạng thái</label>
            @Html.DropDownListFor(x => x.Trangthai, new SelectList(new List<SelectListItem>
            {
                new SelectListItem { Text = "Active", Value = "true" },
                new SelectListItem { Text = "Inactive", Value = "false" }
            }, "Value", "Text"), "Chọn trạng thái", new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Trangthai, null, new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script>
            function BrowseServer(field) {
                var finder = new CKFinder();
                finder.selectActionFunction = function (fileUrl) {
                    document.getElementById(field).value = fileUrl;
                };
                finder.popup();
            }
        </script>

    }
